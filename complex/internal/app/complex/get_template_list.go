// Code generated by scratch. You must modify it.

package complex

import (
	"context"
	"heisenbug/complex/internal/pkg/model"
	desc "heisenbug/complex/pkg/api/complex"
)

// GetTemplateList stub. Please implement it.
func (i *Implementation) GetTemplateList(ctx context.Context, req *desc.GetTemplateListRequest) (*desc.GetTemplateListResponse, error) {
	pagination := &model.Pagination{
		Page:    req.Page,
		PerPage: req.PerPage,
	}

	limit := pagination.GetPerPage()
	offset := pagination.GetOffset()

	templatesCount, err := i.templateRepo.CountTemplates(ctx, req.Filter)
	if err != nil {
		return nil, err
	}

	if offset >= templatesCount {
		return &desc.GetTemplateListResponse{TotalItems: templatesCount, Templates: []*desc.TemplateInfo{}}, nil
	}

	templates, err := i.templateRepo.GetTemplatesList(ctx, req.Filter, &offset, &limit)
	if err != nil {
		return nil, err
	}

	templatesInfoList := make([]*desc.TemplateInfo, 0, len(templates))
	for _, template := range templates {
		description := ""
		if template.Description != nil {
			description = *template.Description
		}
		tmp := &desc.TemplateInfo{
			TemplateName: template.Name,
			Description:  description,
			Status:       template.Status,
		}
		templatesInfoList = append(templatesInfoList, tmp)
	}
	return &desc.GetTemplateListResponse{
		Templates:  templatesInfoList,
		TotalItems: templatesCount,
	}, nil
}
